{"ast":null,"code":"// CheckoutService.js\n\nconst BASE_URL = 'http://localhost/api';\nexport default {\n  async storeUserDetails(userDetails) {\n    try {\n      const response = await fetch(`${BASE_URL}/user`, {\n        method: 'POST',\n        // headers: {\n        //   'Content-Type': 'application/json',\n        // },\n        body: userDetails\n      });\n      if (!response.ok) {\n        throw new Error('Failed to store the user details');\n      }\n      const result = await response.json();\n      console.log(\"check result user\", result);\n      return result;\n    } catch (error) {\n      console.error('Error storing the user details:', error.message);\n      throw error;\n    }\n  },\n  async emailOrderDetails(order, userid) {\n    try {\n      const response = await fetch(`${BASE_URL}/email/send`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          orders: order,\n          userId: userid\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to send the order details in email');\n      }\n      const result = await response.json();\n      console.log(\"check result user\", result);\n      return result;\n    } catch (error) {\n      console.error('Error storing the user details:', error.message);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["BASE_URL","storeUserDetails","userDetails","response","fetch","method","body","ok","Error","result","json","console","log","error","message","emailOrderDetails","order","userid","headers","JSON","stringify","orders","userId"],"sources":["/Users/ronanotaza/Desktop/tyler/docker-laravel-vue-main/vue/src/services/UserService.js"],"sourcesContent":["// CheckoutService.js\n\nconst BASE_URL = 'http://localhost/api';\n\nexport default {\n  async storeUserDetails(userDetails) {\n\n    try {\n      const response = await fetch(`${BASE_URL}/user`, {\n        method: 'POST',\n        // headers: {\n        //   'Content-Type': 'application/json',\n        // },\n        body: userDetails,\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to store the user details');\n      }\n\n    \n      const result = await response.json();\n      console.log(\"check result user\", result);\n\n      return result;\n\n    \n\n    } catch (error) {\n      console.error('Error storing the user details:', error.message);\n      throw error;\n    }\n  },\n  async emailOrderDetails(order, userid) {\n\n    try {\n      const response = await fetch(`${BASE_URL}/email/send`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({orders: order, userId: userid}),\n      });\n\n      if (!response.ok) {\n        throw new Error('Failed to send the order details in email');\n      }\n\n    \n      const result = await response.json();\n      console.log(\"check result user\", result);\n      \n      return result;\n\n    \n\n    } catch (error) {\n      console.error('Error storing the user details:', error.message);\n      throw error;\n    }\n  },\n};\n"],"mappings":"AAAA;;AAEA,MAAMA,QAAQ,GAAG,sBAAsB;AAEvC,eAAe;EACb,MAAMC,gBAAgBA,CAACC,WAAW,EAAE;IAElC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,OAAM,EAAE;QAC/CK,MAAM,EAAE,MAAM;QACd;QACA;QACA;QACAC,IAAI,EAAEJ;MACR,CAAC,CAAC;MAEF,IAAI,CAACC,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,kCAAkC,CAAC;MACrD;MAGA,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,MAAM,CAAC;MAExC,OAAOA,MAAM;IAIf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC/D,MAAMD,KAAK;IACb;EACF,CAAC;EACD,MAAME,iBAAiBA,CAACC,KAAK,EAAEC,MAAM,EAAE;IAErC,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,QAAS,aAAY,EAAE;QACrDK,MAAM,EAAE,MAAM;QACda,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDZ,IAAI,EAAEa,IAAI,CAACC,SAAS,CAAC;UAACC,MAAM,EAAEL,KAAK;UAAEM,MAAM,EAAEL;QAAM,CAAC;MACtD,CAAC,CAAC;MAEF,IAAI,CAACd,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2CAA2C,CAAC;MAC9D;MAGA,MAAMC,MAAM,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;MACpCC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,MAAM,CAAC;MAExC,OAAOA,MAAM;IAIf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAACC,OAAO,CAAC;MAC/D,MAAMD,KAAK;IACb;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}