{"ast":null,"code":"import UserModal from '@/components/UserModal.vue';\nimport ProductCard from '@/components/ProductCard.vue';\nimport CheckoutProduct from './CheckoutProduct.vue';\nimport CheckoutService from '@/services/CheckoutService';\nimport CatalogService from '@/services/CatalogService';\nimport UserService from '@/services/UserService';\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'ProductList',\n  components: {\n    ProductCard,\n    CheckoutProduct,\n    UserModal\n  },\n  data() {\n    return {\n      products: [],\n      showCheckout: false,\n      cart: [],\n      isModalOpen: false\n    };\n  },\n  async created() {\n    try {\n      // Fetch products from the CatalogService\n      this.products = await CatalogService.getProducts();\n    } catch (error) {\n      console.error(`${error.message}`);\n      // Handle error as needed\n    }\n  },\n  computed: {\n    ...mapGetters('user', ['getUserDetails'])\n  },\n  methods: {\n    ...mapActions('user', ['setUserDetails', 'clearUserDetails']),\n    checkout(cart) {\n      console.log(\"Checkout\", cart);\n      this.cart = [...this.cart, ...cart]; // Merge current cart items with existing cart\n      this.showCheckout = true;\n    },\n    closeModal() {\n      this.isModalOpen = false;\n    },\n    async placeOrder() {\n      if (this.getUserDetails?.data?.id) {\n        try {\n          // Call the CheckoutService to place the order\n          const order = await CheckoutService.placeOrder(this.cart, this.getUserDetails.data.id);\n\n          // Clear the cart after placing the order\n          this.cart = [];\n          this.showCheckout = false;\n          this.emailOrderDetails(order, this.getUserDetails.data.id);\n          this.$toastr.success(`Order placed successfully!`);\n        } catch (error) {\n          console.error('Error placing the order:', error.message);\n          this.$toastr.error(`${error.message}`);\n          // Handle error as needed\n        }\n      } else {\n        this.isModalOpen = true;\n        return;\n      }\n    },\n    async storeUserDetails() {\n      try {\n        // Create FormData\n        const formData = new FormData();\n        formData.append('name', this.user.name);\n        formData.append('email', this.user.email);\n        formData.append('password', 'password'); // temporary\n\n        // Call the storeUserDetails to store the user details\n        const user = await UserService.storeUserDetails(formData);\n\n        // Dispatch the setUserDetails action to save user details in Vuex\n        await this.$store.dispatch('user/setUserDetails', user);\n\n        // Close the modal\n        this.isModalOpen = false;\n        this.$toastr.success(`User store successfully!`);\n      } catch (error) {\n        console.error('Error storing the user details:', error.message);\n        this.$toastr.error(`${error.message}`);\n      }\n    },\n    async emailOrderDetails(order, userId) {\n      try {\n        // Call the storeUserDetails to store the user details\n        const email = await UserService.emailOrderDetails(order, userId);\n        this.$toastr.success(`${email.message}`);\n      } catch (error) {\n        this.$toastr.error(`${error.message}`);\n        // Handle error as needed\n      }\n    }\n  }\n};","map":{"version":3,"names":["UserModal","ProductCard","CheckoutProduct","CheckoutService","CatalogService","UserService","mapActions","mapGetters","name","components","data","products","showCheckout","cart","isModalOpen","created","getProducts","error","console","message","computed","methods","checkout","log","closeModal","placeOrder","getUserDetails","id","order","emailOrderDetails","$toastr","success","storeUserDetails","formData","FormData","append","user","email","$store","dispatch","userId"],"sources":["/Users/ronanotaza/Desktop/tyler/docker-laravel-vue-main/vue/src/products/ProductList.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n    <!-- Iterate through the list of products and display ProductCard for each -->\n    <ProductCard\n        v-for=\"product in products\"\n        :key=\"product.id\"\n        :pid=\"product.id\"\n        :name=\"product.name\"\n        :description=\"product.description\"\n        :price=\"product.price\"\n        @checkout=\"checkout\"\n    />\n\n    {{ getUserDetails }}\n\n    <UserModal\n        :isModalOpen=\"isModalOpen\"\n        @storeUserDetails=\"storeUserDetails\"\n        @closeModal=\"closeModal\"\n    />\n\n    <CheckoutProduct v-if=\"showCheckout\" :cart=\"cart\" />\n    <button v-if=\"cart.length\" @click=\"placeOrder\" class=\"place-order-button\">\n      Place Order\n    </button>\n    </div>\n  </template>\n  \n  <script>\n  import UserModal from '@/components/UserModal.vue';\n  import ProductCard from '@/components/ProductCard.vue';\n  import CheckoutProduct from './CheckoutProduct.vue';\n  import CheckoutService from '@/services/CheckoutService';\n  import CatalogService from '@/services/CatalogService';\n  import UserService from '@/services/UserService';\n  import { mapActions, mapGetters } from 'vuex';\n\n  export default {\n    name: 'ProductList',\n    components: {\n      ProductCard,\n      CheckoutProduct,\n      UserModal\n    },\n    data() {\n      return {\n        products: [],\n        showCheckout: false,\n        cart: [],\n        isModalOpen: false,\n      };\n    },\n    async created() {\n    try {\n      // Fetch products from the CatalogService\n      this.products = await CatalogService.getProducts();\n\n    } catch (error) {\n      console.error(`${error.message}`);\n      // Handle error as needed\n    }\n  },\n  computed: {\n    ...mapGetters('user', ['getUserDetails']),\n  },\n    methods: {\n        ...mapActions('user',['setUserDetails', 'clearUserDetails']),\n        checkout(cart) {\n            console.log(\"Checkout\", cart);\n            this.cart = [...this.cart, ...cart]; // Merge current cart items with existing cart\n            this.showCheckout = true;\n        },\n        closeModal() {\n            this.isModalOpen = false;\n        },\n        async placeOrder() {\n\n            if(this.getUserDetails?.data?.id) {\n               \n            try {\n                // Call the CheckoutService to place the order\n                const order = await CheckoutService.placeOrder(this.cart, this.getUserDetails.data.id);\n\n                // Clear the cart after placing the order\n                this.cart = [];\n                this.showCheckout = false;\n\n                this.emailOrderDetails(order, this.getUserDetails.data.id);\n\n                this.$toastr.success(`Order placed successfully!`);\n\n            } catch (error) {\n                console.error('Error placing the order:', error.message);\n                this.$toastr.error(`${error.message}`);\n                // Handle error as needed\n            }\n          } else {\n\n            this.isModalOpen = true;\n\n            return;\n\n          }\n        },\n        async storeUserDetails() {\n            try {\n                // Create FormData\n                const formData = new FormData();\n                formData.append('name', this.user.name);\n                formData.append('email', this.user.email);\n                formData.append('password', 'password'); // temporary\n\n                // Call the storeUserDetails to store the user details\n                const user = await UserService.storeUserDetails(formData);\n\n                // Dispatch the setUserDetails action to save user details in Vuex\n                await this.$store.dispatch('user/setUserDetails', user);\n\n                // Close the modal\n                this.isModalOpen = false;\n\n                this.$toastr.success(`User store successfully!`);\n\n            } catch (error) {\n                console.error('Error storing the user details:', error.message);\n                this.$toastr.error(`${error.message}`);\n\n            }\n        },\n\n\n        async emailOrderDetails(order, userId) {\n            try {\n                // Call the storeUserDetails to store the user details\n               const email = await UserService.emailOrderDetails(order, userId);\n\n               this.$toastr.success(`${email.message}`);\n\n\n            } catch (error) {\n                this.$toastr.error(`${error.message}`);\n                // Handle error as needed\n            }\n        },\n    }\n  };\n  </script>\n\n<style scoped>\n.container {\n  padding: 20px;\n  display: flex; /* Display children in a row */\n  gap: 20px; /* Add spacing between products */\n  overflow-x: auto; /* Add horizontal scroll if needed */\n  justify-content: flex-start;\n}\n\n.place-order-button {\n  margin-top: 20px;\n  padding: 10px;\n  background-color: #dc3545;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  height: 466px;\n}\n\n.place-order-button:hover {\n  background-color: #c82333;\n}\n\n</style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}