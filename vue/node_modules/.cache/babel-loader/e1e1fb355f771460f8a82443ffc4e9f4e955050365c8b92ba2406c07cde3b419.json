{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, toDisplayString as _toDisplayString, createVNode as _createVNode, createTextVNode as _createTextVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f2d3f8a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductCard = _resolveComponent(\"ProductCard\");\n  const _component_UserModal = _resolveComponent(\"UserModal\");\n  const _component_CheckoutProduct = _resolveComponent(\"CheckoutProduct\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Iterate through the list of products and display ProductCard for each \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createBlock(_component_ProductCard, {\n      key: product.id,\n      pid: product.id,\n      name: product.name,\n      description: product.description,\n      price: product.price,\n      onCheckout: $options.checkout\n    }, null, 8 /* PROPS */, [\"pid\", \"name\", \"description\", \"price\", \"onCheckout\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createTextVNode(\" \" + _toDisplayString(_ctx.getUserDetails) + \" \", 1 /* TEXT */), _createVNode(_component_UserModal, {\n    isModalOpen: $data.isModalOpen,\n    onStoreUserDetails: $options.storeUserDetails,\n    onCloseModal: $options.closeModal\n  }, null, 8 /* PROPS */, [\"isModalOpen\", \"onStoreUserDetails\", \"onCloseModal\"]), $data.showCheckout ? (_openBlock(), _createBlock(_component_CheckoutProduct, {\n    key: 0,\n    cart: $data.cart\n  }, null, 8 /* PROPS */, [\"cart\"])) : _createCommentVNode(\"v-if\", true), $data.cart.length ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 1,\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.placeOrder && $options.placeOrder(...args)),\n    class: \"place-order-button\"\n  }, \" Place Order \")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_Fragment","_renderList","$data","products","product","_createBlock","_component_ProductCard","key","id","pid","name","description","price","onCheckout","$options","checkout","_toDisplayString","_ctx","getUserDetails","_createVNode","_component_UserModal","isModalOpen","onStoreUserDetails","storeUserDetails","onCloseModal","closeModal","showCheckout","_component_CheckoutProduct","cart","length","onClick","_cache","args","placeOrder"],"sources":["/Users/ronanotaza/Desktop/tyler/docker-laravel-vue-main/vue/src/products/ProductList.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n    <!-- Iterate through the list of products and display ProductCard for each -->\n    <ProductCard\n        v-for=\"product in products\"\n        :key=\"product.id\"\n        :pid=\"product.id\"\n        :name=\"product.name\"\n        :description=\"product.description\"\n        :price=\"product.price\"\n        @checkout=\"checkout\"\n    />\n\n    {{ getUserDetails }}\n\n    <UserModal\n        :isModalOpen=\"isModalOpen\"\n        @storeUserDetails=\"storeUserDetails\"\n        @closeModal=\"closeModal\"\n    />\n\n    <CheckoutProduct v-if=\"showCheckout\" :cart=\"cart\" />\n    <button v-if=\"cart.length\" @click=\"placeOrder\" class=\"place-order-button\">\n      Place Order\n    </button>\n    </div>\n  </template>\n  \n  <script>\n  import UserModal from '@/components/UserModal.vue';\n  import ProductCard from '@/components/ProductCard.vue';\n  import CheckoutProduct from './CheckoutProduct.vue';\n  import CheckoutService from '@/services/CheckoutService';\n  import CatalogService from '@/services/CatalogService';\n  import UserService from '@/services/UserService';\n  import { mapActions, mapGetters } from 'vuex';\n\n  export default {\n    name: 'ProductList',\n    components: {\n      ProductCard,\n      CheckoutProduct,\n      UserModal\n    },\n    data() {\n      return {\n        products: [],\n        showCheckout: false,\n        cart: [],\n        isModalOpen: false,\n      };\n    },\n    async created() {\n    try {\n      // Fetch products from the CatalogService\n      this.products = await CatalogService.getProducts();\n\n    } catch (error) {\n      console.error(`${error.message}`);\n      // Handle error as needed\n    }\n  },\n  computed: {\n    ...mapGetters('user', ['getUserDetails']),\n  },\n    methods: {\n        ...mapActions('user',['setUserDetails', 'clearUserDetails']),\n        checkout(cart) {\n            console.log(\"Checkout\", cart);\n            this.cart = [...this.cart, ...cart]; // Merge current cart items with existing cart\n            this.showCheckout = true;\n        },\n        closeModal() {\n            this.isModalOpen = false;\n        },\n        async placeOrder() {\n\n            if(this.getUserDetails.data.id) {\n               \n            try {\n                // Call the CheckoutService to place the order\n                const order = await CheckoutService.placeOrder(this.cart, this.getUserDetails.data.id);\n\n                // Clear the cart after placing the order\n                this.cart = [];\n                this.showCheckout = false;\n\n                this.emailOrderDetails(order, this.getUserDetails.data.id);\n\n                this.$toastr.success(`Order placed successfully!`);\n\n            } catch (error) {\n                console.error('Error placing the order:', error.message);\n                this.$toastr.error(`${error.message}`);\n                // Handle error as needed\n            }\n          } else {\n\n            this.isModalOpen = true;\n\n            return;\n\n          }\n        },\n        async storeUserDetails() {\n            try {\n                // Create FormData\n                const formData = new FormData();\n                formData.append('name', this.user.name);\n                formData.append('email', this.user.email);\n                formData.append('password', 'password'); // temporary\n\n                // Call the storeUserDetails to store the user details\n                const user = await UserService.storeUserDetails(formData);\n\n                // Dispatch the setUserDetails action to save user details in Vuex\n                await this.$store.dispatch('user/setUserDetails', user);\n\n                // Close the modal\n                this.isModalOpen = false;\n\n                this.$toastr.success(`User store successfully!`);\n\n            } catch (error) {\n                console.error('Error storing the user details:', error.message);\n                this.$toastr.error(`${error.message}`);\n\n            }\n        },\n\n\n        async emailOrderDetails(order, userId) {\n            try {\n                // Call the storeUserDetails to store the user details\n               const email = await UserService.emailOrderDetails(order, userId);\n\n               this.$toastr.success(`${email.message}`);\n\n\n            } catch (error) {\n                this.$toastr.error(`${error.message}`);\n                // Handle error as needed\n            }\n        },\n    }\n  };\n  </script>\n\n<style scoped>\n.container {\n  padding: 20px;\n  display: flex; /* Display children in a row */\n  gap: 20px; /* Add spacing between products */\n  overflow-x: auto; /* Add horizontal scroll if needed */\n  justify-content: flex-start;\n}\n\n.place-order-button {\n  margin-top: 20px;\n  padding: 10px;\n  background-color: #dc3545;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  height: 466px;\n}\n\n.place-order-button:hover {\n  background-color: #c82333;\n}\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  background-color: #fff;\n  padding: 50px;\n  border-radius: 8px;\n}\nlabel,input {\n    padding: 8px;\n}\n.submit-button {\n    padding: 8px;\n    cursor: pointer;\n}\n.close-modal {\n    padding: 8px;\n    margin-top: 30px;\n}\n</style>\n  "],"mappings":";;;EACSA,KAAK,EAAC;AAAW;;;;;uBAAtBC,mBAAA,CAwBM,OAxBNC,UAwBM,GAvBNC,mBAAA,2EAA8E,G,kBAC9EF,mBAAA,CAQEG,SAAA,QAAAC,WAAA,CAPoBC,KAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBADlBC,YAAA,CAQEC,sBAAA;MANGC,GAAG,EAAEH,OAAO,CAACI,EAAE;MACfC,GAAG,EAAEL,OAAO,CAACI,EAAE;MACfE,IAAI,EAAEN,OAAO,CAACM,IAAI;MAClBC,WAAW,EAAEP,OAAO,CAACO,WAAW;MAChCC,KAAK,EAAER,OAAO,CAACQ,KAAK;MACpBC,UAAQ,EAAEC,QAAA,CAAAC;;mDACb,GAEF,GAAAC,gBAAA,CAAGC,IAAA,CAAAC,cAAc,IAAG,GAEpB,iBAAAC,YAAA,CAIEC,oBAAA;IAHGC,WAAW,EAAEnB,KAAA,CAAAmB,WAAW;IACxBC,kBAAgB,EAAER,QAAA,CAAAS,gBAAgB;IAClCC,YAAU,EAAEV,QAAA,CAAAW;kFAGMvB,KAAA,CAAAwB,YAAY,I,cAAnCrB,YAAA,CAAoDsB,0BAAA;;IAAdC,IAAI,EAAE1B,KAAA,CAAA0B;0EAC9B1B,KAAA,CAAA0B,IAAI,CAACC,MAAM,I,cAAzBhC,mBAAA,CAES;;IAFmBiC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAElB,QAAA,CAAAmB,UAAA,IAAAnB,QAAA,CAAAmB,UAAA,IAAAD,IAAA,CAAU;IAAEpC,KAAK,EAAC;KAAqB,eAE1E,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}