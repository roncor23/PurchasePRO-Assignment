{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\n\nconst _withScopeId = n => (_pushScopeId(\"data-v-1f2d3f8a\"), n = n(), _popScopeId(), n);\n\nconst _hoisted_1 = {\n  class: \"container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_3 = {\n  class: \"modal-content\"\n};\n\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"Name:\", -1\n/* HOISTED */\n));\n\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"Email:\", -1\n/* HOISTED */\n));\n\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Submit\", -1\n/* HOISTED */\n));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ProductCard = _resolveComponent(\"ProductCard\");\n\n  const _component_CheckoutProduct = _resolveComponent(\"CheckoutProduct\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Iterate through the list of products and display ProductCard for each \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.products, product => {\n    return _openBlock(), _createBlock(_component_ProductCard, {\n      key: product.id,\n      pid: product.id,\n      title: product.title,\n      description: product.description,\n      price: product.price,\n      onCheckout: $options.checkout\n    }, null, 8\n    /* PROPS */\n    , [\"pid\", \"title\", \"description\", \"price\", \"onCheckout\"]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"p\", null, _toDisplayString(_ctx.getUserDetails.length), 1\n  /* TEXT */\n  ), _createCommentVNode(\" <div v-if=\\\"!showCheckout\\\">\\n      <form @submit.prevent=\\\"storeUserDetails\\\">\\n        <label for=\\\"name\\\">Name:</label>\\n        <input type=\\\"text\\\" id=\\\"name\\\" v-model=\\\"user.name\\\" required />\\n\\n        <label for=\\\"email\\\">Email:</label>\\n        <input type=\\\"email\\\" id=\\\"email\\\" v-model=\\\"user.email\\\" required />\\n\\n        <button type=\\\"submit\\\">Submit</button>\\n      </form>\\n    </div> \"), _createCommentVNode(\" Modal component \"), $data.isModalOpen ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.storeUserDetails && $options.storeUserDetails(...args), [\"prevent\"]))\n  }, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.user.name = $event),\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.user.name]]), _hoisted_5, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.user.email = $event),\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.user.email]]), _hoisted_6], 32\n  /* HYDRATE_EVENTS */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.closeModal && _ctx.closeModal(...args))\n  }, \"Close Modal\")])])) : _createCommentVNode(\"v-if\", true), $data.showCheckout ? (_openBlock(), _createBlock(_component_CheckoutProduct, {\n    key: 1,\n    cart: $data.cart\n  }, null, 8\n  /* PROPS */\n  , [\"cart\"])) : _createCommentVNode(\"v-if\", true), $data.cart.length ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 2,\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.placeOrder && $options.placeOrder(...args)),\n    class: \"place-order-button\"\n  }, \" Place Order \")) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;;;;EACSA,KAAK,EAAC;;;;EAwBiBA,KAAK,EAAC;;;EACrBA,KAAK,EAAC;;;gEAEPC,oBAA+B,OAA/B,EAA+B;EAAxBC,GAAG,EAAC;AAAoB,CAA/B,EAAkB,OAAlB,EAAuB;AAAA;AAAvB;;gEAGAD,oBAAiC,OAAjC,EAAiC;EAA1BC,GAAG,EAAC;AAAsB,CAAjC,EAAmB,QAAnB,EAAyB;AAAA;AAAzB;;gEAGAD,oBAAqC,QAArC,EAAqC;EAA7BE,IAAI,EAAC;AAAwB,CAArC,EAAsB,QAAtB,EAA4B;AAAA;AAA5B;;;;;;;uBAjCZC,oBA0CM,KA1CN,cA0CM,CAzCNC,8FAyCM,qBAxCND,oBAQEE,SARF,EAQE,IARF,EAQEC,YAPoBC,cAOpB,EAPSC,OAAmB,IAAZ;yBADlBC,aAQEC,sBARF,EAQE;MANGC,GAAG,EAAEH,OAAO,CAACI,EAMhB;MALGC,GAAG,EAAEL,OAAO,CAACI,EAKhB;MAJGE,KAAK,EAAEN,OAAO,CAACM,KAIlB;MAHGC,WAAW,EAAEP,OAAO,CAACO,WAGxB;MAFGC,KAAK,EAAER,OAAO,CAACQ,KAElB;MADGC,UAAQ,EAAEC;IACb,CARF;;IAAA;GAQE,CARF;;EAAA,CAwCM,GA/BNlB,oBAAkC,GAAlC,EAAkC,IAAlC,EAAkCmB,iBAA5BC,oBAAeC,MAAa,CAAlC,EAA2B;EAAA;EAA3B,CA+BM,EA9BNjB,2aA8BM,EAnBFA,wCAmBE,EAlBSG,mCAAXJ,oBAaM,KAbN,cAaM,CAZFH,oBAWM,KAXN,cAWM,CAVFA,oBAQO,MARP,EAQO;IARAsB,QAAM,wDAAUJ,+DAAV,EAA0B,WAA1B;EAQN,CARP,GACAK,4BACAvB,oBAA4D,OAA5D,EAA4D;IAArDE,IAAI,EAAC,MAAgD;IAAzCU,EAAE,EAAC,MAAsC;+DAAtBL,WAAKiB,OAAIC,OAAa;IAAXC,QAAQ,EAAR;EAAW,CAA5D;;EAAA,kBAAsCnB,WAAKiB,SAE3CG,4BACA3B,oBAA+D,OAA/D,EAA+D;IAAxDE,IAAI,EAAC,OAAmD;IAA3CU,EAAE,EAAC,OAAwC;+DAAvBL,WAAKqB,QAAKH,OAAa;IAAXC,QAAQ,EAAR;EAAW,CAA/D;;EAAA,kBAAwCnB,WAAKqB,UAE7CC,WAPA;;EAAA,CAUE,EADF7B,oBAAgD,QAAhD,EAAgD;IAAvC8B,OAAK,yCAAEV,2CAAF;EAAkC,CAAhD,EAA4B,aAA5B,CACE,CAXN,CAYE,CAbN,sCAkBE,EAJiBb,oCAAvBE,aAAoDsB,0BAApD,EAAoD;UAAA;IAAdC,IAAI,EAAEzB;EAAQ,CAApD;;EAAA,gDAIM,EAHQA,WAAKc,wBAAnBlB,oBAES,QAFT,EAES;UAAA;IAFmB2B,OAAK,yCAAEZ,mDAAF,CAExB;IAFsCnB,KAAK,EAAC;EAE5C,CAFT,EAA0E,eAA1E,sCAGM,CA1CN","names":["class","_createElementVNode","for","type","_createElementBlock","_createCommentVNode","_Fragment","_renderList","$data","product","_createBlock","_component_ProductCard","key","id","pid","title","description","price","onCheckout","$options","_toDisplayString","_ctx","length","onSubmit","_hoisted_4","name","$event","required","_hoisted_5","email","_hoisted_6","onClick","_component_CheckoutProduct","cart"],"sourceRoot":"","sources":["/app/src/products/ProductList.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n    <!-- Iterate through the list of products and display ProductCard for each -->\n    <ProductCard\n        v-for=\"product in products\"\n        :key=\"product.id\"\n        :pid=\"product.id\"\n        :title=\"product.title\"\n        :description=\"product.description\"\n        :price=\"product.price\"\n        @checkout=\"checkout\"\n    />\n    <p>{{ getUserDetails.length }}</p>\n    <!-- <div v-if=\"!showCheckout\">\n      <form @submit.prevent=\"storeUserDetails\">\n        <label for=\"name\">Name:</label>\n        <input type=\"text\" id=\"name\" v-model=\"user.name\" required />\n\n        <label for=\"email\">Email:</label>\n        <input type=\"email\" id=\"email\" v-model=\"user.email\" required />\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div> -->\n        <!-- Modal component -->\n        <div v-if=\"isModalOpen\" class=\"modal\">\n            <div class=\"modal-content\">\n                <form @submit.prevent=\"storeUserDetails\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" id=\"name\" v-model=\"user.name\" required />\n\n                <label for=\"email\">Email:</label>\n                <input type=\"email\" id=\"email\" v-model=\"user.email\" required />\n\n                <button type=\"submit\">Submit</button>\n                </form>\n                <button @click=\"closeModal\">Close Modal</button>\n            </div>\n        </div>\n    <CheckoutProduct v-if=\"showCheckout\" :cart=\"cart\" />\n    <button v-if=\"cart.length\" @click=\"placeOrder\" class=\"place-order-button\">\n      Place Order\n    </button>\n    </div>\n  </template>\n  \n  <script>\n  import ProductCard from '@/components/ProductCard.vue';\n  import CheckoutProduct from './CheckoutProduct.vue';\n  import CheckoutService from '@/services/CheckoutService';\n  import CatalogService from '@/services/CatalogService';\n  import UserService from '@/services/UserService';\n  import { mapActions, mapGetters } from 'vuex';\n\n  export default {\n    name: 'ProductList',\n    components: {\n      ProductCard,\n      CheckoutProduct\n    },\n    data() {\n      return {\n        products: [],\n        showCheckout: false,\n        cart: [],\n        user: {\n            name: '',\n            email: '',\n        },\n        isModalOpen: false,\n      };\n    },\n    async created() {\n    try {\n      // Fetch products from the CatalogService\n      this.products = await CatalogService.getProducts();\n    } catch (error) {\n      console.error('Error loading products:', error.message);\n      // Handle error as needed\n    }\n  },\n  computed: {\n    ...mapGetters('user', ['getUserDetails']),\n  },\n    methods: {\n        ...mapActions('user',['setUserDetails', 'clearUserDetails']),\n        checkout(cart) {\n            console.log(\"Checkout\", cart);\n            this.cart = [...this.cart, ...cart]; // Merge current cart items with existing cart\n            this.showCheckout = true;\n        },\n        async placeOrder() {\n            try {\n                // Call the CheckoutService to place the order\n                await CheckoutService.placeOrder(this.cart);\n\n                // Clear the cart after placing the order\n                this.cart = [];\n                this.showCheckout = false;\n\n                console.log('Order placed successfully!');\n\n            } catch (error) {\n                console.error('Error placing the order:', error.message);\n                // Handle error as needed\n            }\n        },\n        async storeUserDetails() {\n            try {\n                // Call the storeUserDetails to store the user details\n               const user = await UserService.storeUserDetails(this.user);\n\n               await this.setUserDetails(user);\n\n                // Clear the user after storing\n                this.user = {};\n\n\n                console.log('Store successfully!', user);\n\n            } catch (error) {\n                console.error('Error storing the user details:', error.message);\n                // Handle error as needed\n            }\n        },\n    }\n  };\n  </script>\n\n<style scoped>\n.container {\n  padding: 20px;\n  display: flex; /* Display children in a row */\n  gap: 20px; /* Add spacing between products */\n  overflow-x: auto; /* Add horizontal scroll if needed */\n  justify-content: flex-start;\n}\n\n.place-order-button {\n  margin-top: 20px;\n  padding: 10px;\n  background-color: #dc3545;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  height: 466px;\n}\n\n.place-order-button:hover {\n  background-color: #c82333;\n}\n</style>\n  "]},"metadata":{},"sourceType":"module"}