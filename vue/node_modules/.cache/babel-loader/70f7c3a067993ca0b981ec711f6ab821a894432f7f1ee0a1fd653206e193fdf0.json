{"ast":null,"code":"import ProductCard from '@/components/ProductCard.vue';\nimport CheckoutProduct from './CheckoutProduct.vue';\nimport CheckoutService from '@/services/CheckoutService';\nimport CatalogService from '@/services/CatalogService';\nimport UserService from '@/services/UserService';\nimport { mapActions, mapGetters } from 'vuex';\nexport default {\n  name: 'ProductList',\n  components: {\n    ProductCard,\n    CheckoutProduct\n  },\n  data() {\n    return {\n      products: [],\n      showCheckout: false,\n      cart: [],\n      user: {\n        name: '',\n        email: ''\n      },\n      isModalOpen: false\n    };\n  },\n  async created() {\n    try {\n      // Fetch products from the CatalogService\n      this.products = await CatalogService.getProducts();\n    } catch (error) {\n      console.error('Error loading products:', error.message);\n      // Handle error as needed\n    }\n  },\n  computed: {\n    ...mapGetters('user', ['getUserDetails'])\n  },\n  methods: {\n    ...mapActions('user', ['setUserDetails', 'clearUserDetails']),\n    checkout(cart) {\n      console.log(\"Checkout\", cart);\n      this.cart = [...this.cart, ...cart]; // Merge current cart items with existing cart\n      this.showCheckout = true;\n    },\n    closeModal() {\n      this.isModalOpen = false;\n    },\n    async placeOrder() {\n      if (this.getUserDetails.id) {\n        try {\n          // Call the CheckoutService to place the order\n          const order = await CheckoutService.placeOrder(this.cart, this.getUserDetails.id);\n\n          // Clear the cart after placing the order\n          this.cart = [];\n          this.showCheckout = false;\n          this.emailOrderDetails(order, this.getUserDetails.id);\n          console.log('Order placed successfully!');\n        } catch (error) {\n          console.error('Error placing the order:', error.message);\n          // Handle error as needed\n        }\n      } else {\n        this.isModalOpen = true;\n        return;\n      }\n    },\n    async storeUserDetails() {\n      try {\n        // Create FormData\n        const formData = new FormData();\n        formData.append('name', this.user.name);\n        formData.append('email', this.user.email);\n        formData.append('password', 'password'); // temporary\n\n        // Call the storeUserDetails to store the user details\n        const user = await UserService.storeUserDetails(formData);\n\n        // Dispatch the setUserDetails action to save user details in Vuex\n        await this.$store.dispatch('user/setUserDetails', user);\n\n        // Clear the user after storing\n        this.user = {};\n\n        // Close the modal\n        this.isModalOpen = false;\n        console.log('Store successfully!', user);\n      } catch (error) {\n        console.error('Error storing the user details:', error.message);\n        // Handle error as needed\n      }\n    },\n    async emailOrderDetails(order, userId) {\n      try {\n        // Call the storeUserDetails to store the user details\n        const email = await UserService.emailOrderDetails(order, userId);\n        console.log(\"check email result\", email);\n      } catch (error) {\n        console.error('Error storing the user details:', error.message);\n        // Handle error as needed\n      }\n    }\n  }\n};","map":{"version":3,"names":["ProductCard","CheckoutProduct","CheckoutService","CatalogService","UserService","mapActions","mapGetters","name","components","data","products","showCheckout","cart","user","email","isModalOpen","created","getProducts","error","console","message","computed","methods","checkout","log","closeModal","placeOrder","getUserDetails","id","order","emailOrderDetails","storeUserDetails","formData","FormData","append","$store","dispatch","userId"],"sources":["/Users/ronanotaza/Desktop/tyler/docker-laravel-vue-main/vue/src/products/ProductList.vue"],"sourcesContent":["<template>\n    <div class=\"container\">\n    <!-- Iterate through the list of products and display ProductCard for each -->\n    <ProductCard\n        v-for=\"product in products\"\n        :key=\"product.id\"\n        :pid=\"product.id\"\n        :title=\"product.title\"\n        :description=\"product.description\"\n        :price=\"product.price\"\n        @checkout=\"checkout\"\n    />\n        <!-- Modal component -->\n        <div v-if=\"isModalOpen\" class=\"modal\">\n            <div class=\"modal-content\">\n                <h2>User Details</h2>\n                <form @submit.prevent=\"storeUserDetails\">\n                <label for=\"name\">Name:</label>\n                <input type=\"text\" id=\"name\" v-model=\"user.name\" required />\n\n                <label for=\"email\">Email:</label>\n                <input type=\"email\" id=\"email\" v-model=\"user.email\" required />\n\n                <button type=\"submit\" class=\"submit-button\">Submit</button>\n                </form>\n                <button @click=\"closeModal\" class=\"close-modal\">Close</button>\n            </div>\n        </div>\n    <CheckoutProduct v-if=\"showCheckout\" :cart=\"cart\" />\n    <button v-if=\"cart.length\" @click=\"placeOrder\" class=\"place-order-button\">\n      Place Order\n    </button>\n    </div>\n  </template>\n  \n  <script>\n  import ProductCard from '@/components/ProductCard.vue';\n  import CheckoutProduct from './CheckoutProduct.vue';\n  import CheckoutService from '@/services/CheckoutService';\n  import CatalogService from '@/services/CatalogService';\n  import UserService from '@/services/UserService';\n  import { mapActions, mapGetters } from 'vuex';\n\n  export default {\n    name: 'ProductList',\n    components: {\n      ProductCard,\n      CheckoutProduct\n    },\n    data() {\n      return {\n        products: [],\n        showCheckout: false,\n        cart: [],\n        user: {\n            name: '',\n            email: '',\n        },\n        isModalOpen: false,\n      };\n    },\n    async created() {\n    try {\n      // Fetch products from the CatalogService\n      this.products = await CatalogService.getProducts();\n\n    } catch (error) {\n      console.error('Error loading products:', error.message);\n      // Handle error as needed\n    }\n  },\n  computed: {\n    ...mapGetters('user', ['getUserDetails']),\n  },\n    methods: {\n        ...mapActions('user',['setUserDetails', 'clearUserDetails']),\n        checkout(cart) {\n            console.log(\"Checkout\", cart);\n            this.cart = [...this.cart, ...cart]; // Merge current cart items with existing cart\n            this.showCheckout = true;\n        },\n        closeModal() {\n            this.isModalOpen = false;\n        },\n        async placeOrder() {\n\n            if(this.getUserDetails.id) {\n               \n            try {\n                // Call the CheckoutService to place the order\n                const order = await CheckoutService.placeOrder(this.cart, this.getUserDetails.id);\n\n                // Clear the cart after placing the order\n                this.cart = [];\n                this.showCheckout = false;\n\n                this.emailOrderDetails(order, this.getUserDetails.id);\n\n                console.log('Order placed successfully!');\n\n            } catch (error) {\n                console.error('Error placing the order:', error.message);\n                // Handle error as needed\n            }\n          } else {\n\n            this.isModalOpen = true;\n            return;\n\n          }\n        },\n        async storeUserDetails() {\n            try {\n                // Create FormData\n                const formData = new FormData();\n                formData.append('name', this.user.name);\n                formData.append('email', this.user.email);\n                formData.append('password', 'password'); // temporary\n\n                // Call the storeUserDetails to store the user details\n                const user = await UserService.storeUserDetails(formData);\n\n                // Dispatch the setUserDetails action to save user details in Vuex\n                await this.$store.dispatch('user/setUserDetails', user);\n\n                // Clear the user after storing\n                this.user = {};\n\n                // Close the modal\n                this.isModalOpen = false;\n\n                console.log('Store successfully!', user);\n            } catch (error) {\n                console.error('Error storing the user details:', error.message);\n                // Handle error as needed\n            }\n        },\n\n\n        async emailOrderDetails(order, userId) {\n            try {\n                // Call the storeUserDetails to store the user details\n               const email = await UserService.emailOrderDetails(order, userId);\n\n               console.log(\"check email result\", email);\n\n\n            } catch (error) {\n                console.error('Error storing the user details:', error.message);\n                // Handle error as needed\n            }\n        },\n    }\n  };\n  </script>\n\n<style scoped>\n.container {\n  padding: 20px;\n  display: flex; /* Display children in a row */\n  gap: 20px; /* Add spacing between products */\n  overflow-x: auto; /* Add horizontal scroll if needed */\n  justify-content: flex-start;\n}\n\n.place-order-button {\n  margin-top: 20px;\n  padding: 10px;\n  background-color: #dc3545;\n  color: #fff;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n  height: 466px;\n}\n\n.place-order-button:hover {\n  background-color: #c82333;\n}\n.modal {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.modal-content {\n  background-color: #fff;\n  padding: 50px;\n  border-radius: 8px;\n}\nlabel,input {\n    padding: 8px;\n}\n.submit-button {\n    padding: 8px;\n    cursor: pointer;\n}\n.close-modal {\n    padding: 8px;\n    margin-top: 30px;\n}\n</style>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}